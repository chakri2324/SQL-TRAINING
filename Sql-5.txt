 1. Find the titles of all movies directed by Steven Spielberg.

SELECT title
FROM Movie
WHERE director = 'Steven Spielberg';

+-------------------------+
| title                   |
+-------------------------+
| E.T.                    |
| Raiders of the Lost Ark |
+-------------------------+

2. Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order.

SELECT DISTINCT year
FROM Movie, Rating
WHERE Movie.mId = Rating.mId AND stars IN (4, 5)
ORDER BY year;

+------+
| year |
+------+
| 1937 |
| 1939 |
| 1981 |
| 2009 |
+------+


3. Find the titles of all movies that have no ratings. 

SELECT title
FROM Movie
WHERE mId NOT IN (SELECT mID FROM Rating);

+-----------+
| title     |
+-----------+
| Star Wars |
| Titanic   |
+-----------+


4. Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 

SELECT name
FROM Reviewer
INNER JOIN Rating USING(rId)
WHERE ratingDate IS NULL;

+---------------+
| name          |
+---------------+
| Daniel Lewis  |
| Chris Jackson |
+---------------+


5. Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 

SELECT name, title, stars, ratingDate
FROM Movie, Rating, Reviewer
WHERE Movie.mId = Rating.mId AND Reviewer.rId = Rating.rId
ORDER BY name, title, stars;

+------------------+-------------------------+-------+------------+
| name             | title                   | stars | ratingDate |
+------------------+-------------------------+-------+------------+
| Ashley White     | E.T.                    |     3 | 2011-01-02 |
| Brittany Harris  | Raiders of the Lost Ark |     2 | 2011-01-30 |
| Brittany Harris  | Raiders of the Lost Ark |     4 | 2011-01-12 |
| Brittany Harris  | The Sound of Music      |     2 | 2011-01-20 |
| Chris Jackson    | E.T.                    |     2 | 2011-01-22 |
| Chris Jackson    | Raiders of the Lost Ark |     4 | NULL       |
| Chris Jackson    | The Sound of Music      |     3 | 2011-01-27 |
| Daniel Lewis     | Snow White              |     4 | NULL       |
| Elizabeth Thomas | Avatar                  |     3 | 2011-01-15 |
| Elizabeth Thomas | Snow White              |     5 | 2011-01-19 |
| James Cameron    | Avatar                  |     5 | 2011-01-20 |
| Mike Anderson    | Gone with the wind      |     3 | 2011-01-09 |
| Sarah Martinez   | Gone with the wind      |     2 | 2011-01-22 |
| Sarah Martinez   | Gone with the wind      |     4 | 2011-01-27 |
+------------------+-------------------------+-------+------------+


6. For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. 

SELECT name, title
FROM Movie
INNER JOIN Rating R1 USING(mId)
INNER JOIN Rating R2 USING(rId)
INNER JOIN Reviewer USING(rId)
WHERE R1.mId = R2.mId AND R1.ratingDate < R2.ratingDate AND R1.stars < R2.stars;

+----------------+--------------------+
| name           | title              |
+----------------+--------------------+
| Sarah Martinez | Gone with the wind |
+----------------+--------------------+


7. For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 

SELECT title, MAX(stars)
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
ORDER BY title;

+-------------------------+------------+
| title                   | max(stars) |
+-------------------------+------------+
| Avatar                  |          5 |
| E.T.                    |          3 |
| Gone with the wind      |          4 |
| Raiders of the Lost Ark |          4 |
| Snow White              |          5 |
| The Sound of Music      |          3 |
+-------------------------+------------+


8. For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. 

SELECT title, (MAX(stars) - MIN(stars)) AS rating_spread
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
ORDER BY rating_spread DESC, title;

+-------------------------+---------------+
| title                   | rating_spread |
+-------------------------+---------------+
| Avatar                  |             2 |
| Gone with the wind      |             2 |
| Raiders of the Lost Ark |             2 |
| E.T.                    |             1 |
| Snow White              |             1 |
| The Sound of Music      |             1 |
+-------------------------+---------------+


9. Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.) 


10. Find the names of all reviewers who rated Gone with the Wind. 

SELECT DISTINCT name
FROM Movie
INNER JOIN Rating USING(mId)
INNER JOIN Reviewer USING(rId)
WHERE title = "Gone with the Wind";

+----------------+
| name           |
+----------------+
| Sarah Martinez |
| Mike Anderson  |
+----------------+

11. For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars. 

SELECT name, title, stars
FROM Movie
INNER JOIN Rating USING(mId)
INNER JOIN Reviewer USING(rId)
WHERE director = name;
+---------------+--------+-------+
| name          | title  | stars |
+---------------+--------+-------+
| James Cameron | Avatar |     5 |
+---------------+--------+-------+


12. Return all reviewer names and movie names together in a single list, alphabetized. (Sorting by the first name of the reviewer and first word in the title is fine; no need for special processing on last names or removing "The".) 

SELECT title FROM Movie
UNION
SELECT name FROM Reviewer
ORDER BY name, title;

+-------------------------+
| reviewer_movie_names    |
+-------------------------+
| Ashley White            |
| Avatar                  |
| Brittany Harris         |
| Chris Jackson           |
| Daniel Lewis            |
| E.T.                    |
| Elizabeth Thomas        |
| Gone with the wind      |
| James Cameron           |
| Mike Anderson           |
| Raiders of the Lost Ark |
| Sarah Martinez          |
| Snow White              |
| Star Wars               |
| The Sound of Music      |
| Titanic                 |
+-------------------------+


13. Find the titles of all movies not reviewed by Chris Jackson. 

SELECT title
FROM Movie
WHERE mId NOT IN (
  SELECT mId
  FROM Rating
  INNER JOIN Reviewer USING(rId)
  WHERE name = "Chris Jackson"
);
+--------------------+
| title              |
+--------------------+
| Gone with the wind |
| Star Wars          |
| Titanic            |
| Snow White         |
| Avatar             |
+--------------------+


14. For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order.

SELECT DISTINCT Re1.name, Re2.name
FROM Rating R1, Rating R2, Reviewer Re1, Reviewer Re2
WHERE R1.mID = R2.mID
AND R1.rID = Re1.rID
AND R2.rID = Re2.rID
AND Re1.name < Re2.name
ORDER BY Re1.name, Re2.name;
+------------------+------------------+
| name             | name             |
+------------------+------------------+
| Ashley White     | Chris Jackson    |
| Brittany Harris  | Chris Jackson    |
| Daniel Lewis     | Elizabeth Thomas |
| Elizabeth Thomas | James Cameron    |
| Mike Anderson    | Sarah Martinez   |
+------------------+------------------+


15. For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars.

SELECT name, title, stars
FROM Movie
INNER JOIN Rating USING(mId)
INNER JOIN Reviewer USING(rId)
WHERE stars = (SELECT MIN(stars) FROM Rating);

+-----------------+-------------------------+-------+
| name            | title                   | stars |
+-----------------+-------------------------+-------+
| Sarah Martinez  | Gone with the wind      |     2 |
| Brittany Harris | The Sound of Music      |     2 |
| Brittany Harris | Raiders of the Lost Ark |     2 |
| Chris Jackson   | E.T.                    |     2 |
+-----------------+-------------------------+-------+

16. List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. 

SELECT title, AVG(stars) AS average
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
ORDER BY average DESC, title;
+-------------------------+--------+
| title                   | avg    |
+-------------------------+--------+
| Snow White              | 4.5000 |
| Avatar                  | 4.0000 |
| Raiders of the Lost Ark | 3.3333 |
| Gone with the wind      | 3.0000 |
| E.T.                    | 2.5000 |
| The Sound of Music      | 2.5000 |
+-------------------------+--------+


17. Find the names of all reviewers who have contributed three or more ratings.

SELECT name
FROM Reviewer
WHERE (SELECT COUNT(*) FROM Rating WHERE Rating.rId = Reviewer.rId) >= 3;

+------------------+
| name             |
+------------------+
| Sarah Martinez   |
| Daniel Lewis     |
| Brittany Harris  |
| Mike Anderson    |
| Chris Jackson    |
| Elizabeth Thomas |
| James Cameron    |
| Ashley White     |
+------------------+


18. Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.


SELECT M1.title, director
FROM Movie M1
INNER JOIN Movie M2 USING(director)
GROUP BY M1.mId
HAVING COUNT(*) > 1
ORDER BY director, M1.title;

+------------------+--------+-------------------------+
| director         | title  | title                   |
+------------------+--------+-------------------------+
| James Cameron    | Avatar | Titanic                 |
| Steven Spielberg | E.T.   | Raiders of the Lost Ark |
+------------------+--------+-------------------------+


19. Find the movie(s) with the highest average rating. Return the movie title(s) and average rating.

SELECT title, AVG(stars) AS average
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
HAVING average = (
  SELECT MAX(average_stars)
  FROM (
    SELECT title, AVG(stars) AS average_stars
    FROM Movie
    INNER JOIN Rating USING(mId)
    GROUP BY mId
  )
);

+------------+--------+
| title      | avg2   |
+------------+--------+
| Snow White | 4.5000 |
+------------+--------+


20. Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating.

SELECT title, AVG(stars) AS average
FROM Movie
INNER JOIN Rating USING(mId)
GROUP BY mId
HAVING average = (
  SELECT MIN(average_stars)
  FROM (
    SELECT title, AVG(stars) AS average_stars
    FROM Movie
    INNER JOIN Rating USING(mId)
    GROUP BY mId
  )
);
+--------------------+--------+
| title              | avg2   |
+--------------------+--------+
| The Sound of Music | 2.5000 |
| E.T.               | 2.5000 |
+--------------------+--------+


21. For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. 

SELECT director, title, MAX(stars)
FROM Movie
INNER JOIN Rating USING(mId)
WHERE director IS NOT NULL
GROUP BY director;
+------------------+--------------------+------------+
| director         | title              | max(stars) |
+------------------+--------------------+------------+
| Victor Fleming   | Gone with the wind |          4 |
| Robert Wise      | The Sound of Music |          3 |
| Steven Spielberg | E.T.               |          4 |
| James Cameron    | Avatar             |          5 |
+------------------+--------------------+------------+